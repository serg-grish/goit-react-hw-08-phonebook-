{"version":3,"sources":["redux/auth/auth-operations.js","components/ContactForm/ContactForm.module.scss","redux/auth/auth-slice.js","components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","style.module.scss","components/Container/Container.module.scss","redux/auth/auth-selectors.js","redux/contact/contact-actions.js","redux/contact/contact-reducer.js","redux/store.js","components/Container/Container.jsx","components/AuthNav/AuthNav.jsx","components/Navigation/Navigation.jsx","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","redux/contact/contact-operations.js","redux/contact/contact-selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/PrivateRoute.js","components/PublicRoute.js","App.jsx","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","message","logIn","logOut","_","fetchCurrentUser","thunkAPI","state","getState","persistedToken","auth","get","module","exports","authSlice","createSlice","name","initialState","user","email","isLoggedIn","isFetchingCurrentUser","extraReducers","authOperations","fulfilled","action","payload","pending","rejected","getIsLoggedIn","getUserName","getIsFetchingCurrent","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","filter","id","combineReducers","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","persistor","persistStore","Container","children","className","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","AuthNav","to","exact","style","activeStyle","Navigation","useSelector","authSelectors","container","alignItems","avatar","marginRight","btn","UserMenu","dispatch","useDispatch","defaultAvatar","src","alt","width","type","onClick","header","justifyContent","borderBottom","AppBar","fetchContacts","addContact","number","contact","deleteContact","contactId","delete","getContacts","getFilter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","selector","ContactForm","contactSelectors","useState","stateName","setStateName","stateNumber","setStateNumber","form","onSubmit","event","preventDefault","find","alert","contactOperations","label","input","pattern","value","onChange","target","title","placeholder","autoComplete","required","Filter","e","ContactList","useEffect","list","map","list__item","onDeleteContacts","PrivateRoute","redirectTo","routeProps","console","log","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","App","fallback","path","title__phonebook","title__contacts","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b2c51a9e.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  },\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"label\":\"ContactForm_label__3KgVy\",\"input\":\"ContactForm_input__3emgF\",\"btn\":\"ContactForm_btn__1BmbG\"};","import { createSlice } from '@reduxjs/toolkit';\n\nimport * as authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, _) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3wSXY\",\"list__item\":\"ContactList_list__item__29IJl\",\"btn\":\"ContactList_btn__LjK5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2pNgv\",\"input\":\"Filter_input__YmgBH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__phonebook\":\"style_title__phonebook__3aFT2\",\"title__contacts\":\"style_title__contacts__2HUDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__11SY1\"};","export const getIsLoggedIn = state => state.auth.isLoggedIn;\nexport const getUserName = state => state.auth.user.name;\nexport const getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\n// const authSelectors = {\n//   getIsLoggedIn,\n//   getUserName,\n//   getIsFetchingCurrent,\n// };\n\n// export default authSelectors;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contact/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contact/fetchContactSuccess');\nexport const fetchContactError = createAction('contact/fetchContactError');\n\nexport const addContactRequest = createAction('contact/addContactRequest');\nexport const addContactSuccess = createAction('contact/addContactSuccess');\nexport const addContactError = createAction('contact/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contact/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contact/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contact/deleteContactError');\n\nexport const changeFilter = createAction('contact/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactSuccess,\n  addContactSuccess,\n  deleteContactSuccess,\n  changeFilter,\n} from './contact-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactReducer from './contact/contact-reducer';\nimport authReducer from './auth/auth-slice';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import styles from './Container.module.scss';\n\nconst Container = ({ children }) => {\n  return <div className={styles.Container}>{children}</div>;\n};\n\nexport default Container;\n","import { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: 'rgb(59, 11, 73)',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Sign Up\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Log In\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Home\n      </NavLink>\n\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          style={styles.link}\n          activeStyle={styles.activeLink}\n        >\n          Phonebook\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/default-avatar.3ab1a692.png\";","import { useSelector, useDispatch } from 'react-redux';\nimport { authOperations, authSelectors } from 'redux/auth';\nimport defaultAvatar from './default-avatar.png';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n    color: 'rgb(63, 102, 207)',\n  },\n  btn: {\n    color: 'rgb(45, 91, 218)',\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n  const avatar = defaultAvatar;\n\n  return (\n    <div style={styles.container}>\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Welcome, {name}</span>\n    <button type=\"button\" style={styles.btn} onClick={() => dispatch(authOperations.logOut())}>\n        Logout\n      </button>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\n\nimport AuthNav from 'components/AuthNav';\nimport Navigation from 'components/Navigation';\nimport UserMenu from 'components/UserMenu';\nimport { authSelectors } from 'redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </nav>\n  );\n}\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contact-actions';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n};\n\nexport const addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nexport const deleteContact = contactId => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\n// export default { fetchContacts, addContact, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nlet selector = {\n  getContacts,\n  getFilter,\n  getFilteredContacts,\n};\n\nexport default selector;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { contactOperations, contactSelectors } from 'redux/contact';\nimport styles from './ContactForm.module.scss';\n\nfunction ContactForm() {\n  const contacts = useSelector(contactSelectors.getContacts);\n  const dispatch = useDispatch();\n  const [stateName, setStateName] = useState('');\n  const [stateNumber, setStateNumber] = useState('');\n\n  const handleInputChangeName = event => {\n    setStateName(event.target.value);\n  };\n\n  const handleInputChangeNumber = event => {\n    setStateNumber(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === stateName.toLowerCase(),\n      )\n    ) {\n      return alert(`${stateName} is already in contacts`);\n    }\n\n    dispatch(contactOperations.addContact(stateName, stateNumber));\n    setStateName('');\n    setStateNumber('');\n  };\n\n  ContactForm.propTypes = {\n    stateName: PropTypes.string.isRequired,\n    stateNumber: PropTypes.string.isRequired,\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          type=\"text\"\n          className={styles.input}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={stateName}\n          onChange={handleInputChangeName}\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          placeholder=\"Enter your name\"\n          autoComplete=\"off\"\n          required\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          type=\"tel\"\n          className={styles.input}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={stateNumber}\n          onChange={handleInputChangeNumber}\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          placeholder=\"Enter your phone number\"\n          autoComplete=\"on\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={styles.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactSelectors, changeFilter } from 'redux/contact';\nimport styles from './Filter.module.scss';\n\nconst Filter = () => {\n  const value = useSelector(contactSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        className={styles.input}\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        placeholder=\"Find your contact\"\n        autoComplete=\"off\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactOperations, contactSelectors } from 'redux/contact';\nimport styles from './ContactList.module.scss';\n\nconst ContactList = () => {\n  const contacts = useSelector(contactSelectors.getFilteredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactOperations.fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContacts = id => dispatch(contactOperations.deleteContact(id));\n\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ name, number, id }) => {\n        return (\n          <li className={styles.list__item} key={id}>\n            {name}: {number}\n            <button\n              type=\"button\"\n              className={styles.btn}\n              onClick={() => onDeleteContacts(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  console.log(routeProps);\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PublicRoute({\n  children,\n  redirectTo = '/',\n  restricted = false,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  console.log('shouldRedirect: ', shouldRedirect);\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import React, { useEffect, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authOperations, authSelectors } from 'redux/auth';\n\nimport Container from 'components/Container';\nimport AppBar from './components/AppBar/AppBar';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport PrivateRoute from 'components/PrivateRoute';\nimport PublicRoute from 'components/PublicRoute';\nimport styles from './style.module.scss';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n  return (\n    !isFetchingCurrentUser && (\n      <Container>\n        <AppBar />\n        <Switch>\n          <Suspense fallback={<p>Loading...</p>}>\n            <PublicRoute path=\"/\" exact>\n              <HomeView />\n            </PublicRoute>\n\n            <PublicRoute path=\"/register\" restricted>\n              <RegisterView />\n            </PublicRoute>\n\n            <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\n              <LoginView />\n            </PublicRoute>\n\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <h1 className={styles.title__phonebook}>Phonebook</h1>\n              <ContactForm />\n              <h2 className={styles.title__contacts}>Contacts</h2>\n              <Filter />\n              <ContactList />\n            </PrivateRoute>\n          </Suspense>\n        </Switch>\n      </Container>\n    )\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </React.StrictMode>\n  </BrowserRouter>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}